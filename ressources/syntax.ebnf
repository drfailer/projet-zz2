<alpha> ::= 'a'-'z' | 'A'-'Z'

<number> ::= '0'-'9'

<identifier> ::= 'a'-'z'( <alpha> | '0'-'9' )*

<int> ::= "int"

<flt> ::= "flt"

<chr> ::= "chr"

<type> ::= <int> | <flt> | <chr>

<declaration> ::= <type> <identifier> ";"

<affectation> ::= "set(" <identifier>"," <value>")" ";"

<fncall> ::= <identifier>"(" [ <identifier>  ("," <identifier>)* ] ")" ";"

<parameter> ::= <type> <identifier>

<parameters> ::= <parameter> [ "," <parameters> ]

<if> ::= if "("<condition>")" "{"<instructions>"}" [ else "{" <instructions>"}" ]

<range> ::= range "("<valueSymbol>, <valueSymbol>, <valueSymbol>")"
<for> ::= for <identifier> in <range> "{"<instructions>"}"

<while> ::= while "("<condition>")" "{" <instructions> "}"

<instruction> ::=
  <declaration>
  | <affectation>
  | <if>
  | <for>
  | <while>
  | <fncall>
  | <builtinfncall>

<instructions> ::= <instruction>+

<function> ::= fn <identifier>"("<parameters>")" [ "->" <type> ] "{"<instructions>"}"
