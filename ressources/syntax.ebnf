<alpha> ::= 'a'-'z' | 'A'-'Z'

<number> ::= '0'-'9'

<identifier> ::= 'a'-'z'( <alpha> | '0'-'9' )*

<range> ::= <number>".."<number>[ ".."<number> ]

<nbr> ::= "nbr"

<flt> ::= "flt"

<chr> ::= "chr"

<type> ::= <nbr> | <flt> | <chr>

<declaration> ::= <type> <identifier> [ "=" <value> ] ";"

<affectation> ::=  <identifier> "=" <value> ";"

<fncall> ::= <identifier>"(" [ <identifier>  ("," <identifier>)* ] ")" ";"

<parameter> ::= <type> <identifier>

<parameters> ::= <parameter> [ "," <parameters> ]

<if> ::= if <condition> "{"<instructions>"}" [ else "{" <instructions>"}" ]

<for> ::= for <declaration> in (<identifier> | <range>) "{"<instructions>"}"

<while> ::= while <condition> "{" <instructions> "}"

<instruction> ::=
  <declaration>
  | <affectation>
  | <if>
  | <for>
  | <while>
  | <fncall>

<instructions> ::= <instruction>+

<function> ::= fn <identifier>"("<parameters>")" [ "->" <type> ] "{"<instructions>"}"
