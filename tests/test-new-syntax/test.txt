Function(main, void, [p1 int, p2 flt, p3 chr, ], Block(
Declaration(a int)
Assignement(a void,4)
Funcall(myFun, [a void, b void, 5, 'a', ])
Declaration(b flt)
Assignement(b void,4)
Assignement(b void,AddOP(AddOP(2, 2), 4))
Assignement(b void,AddOP(2, AddOP(5, 6)))
Assignement(b void,AddOP(MnsOP(3, TmsOP(3, Funcall(fonction, [a void, ])
)), AddOP(5, 6)))

Assignement(b void,Funcall(fonction, [MnsOP(3, TmsOP(3, Funcall(fonction, [MnsOP(4, 6), ]))), AddOP(5, 6), ]))

Funcall(fonction, [a void, b void, Funcall(fonction, [a void, b void, ]) , 4, ])

Funcall(fonction, [a void, b void, Funcall(fonction, [a void, AddOP(3, 4), ]) , TmsOP(2, 2), ])

Funcall(fonction, [a void, AddOP(3, 3), Funcall(fonction, [a void, b void, ]) , 4, ])

Funcall(fonction, [a void, Funcall(fonc, [a void, ]) , Funcall(fonction, [a void, b void, ]) , 4, ])

If(condition, Block(
Declaration(c chr)
Assignement(c void,'a')
)
)
)
)
